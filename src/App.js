import React, { useState, useEffect } from "react";
import axios from "axios";
import { retrieveLaunchParams } from "@telegram-apps/sdk"; // –ò–º–ø–æ—Ä—Ç retrieveLaunchParams
import Header from "./components/Header/Header";
import Stats from "./components/Stats/Stats";
import Main from "./components/Main/Main";
import Footer from "./components/Footer/Footer";
import "./App.css";

const App = () => {
    const [authStatus, setAuthStatus] = useState(null); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏

    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    const authenticateWithServer = async (initDataRaw) => {
        try {
            const response = await axios.post(
                "https://cors-anywhere.herokuapp.com/https://30ea-2001-2020-4343-fe89-28f9-bbaa-da2d-787b.ngrok-free.app/bot_tg_back/api/login/index.php", // –£–∫–∞–∂–∏—Ç–µ —Ä–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å
                {}, // –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ø—É—Å—Ç—ã–º, —Ç–∞–∫ –∫–∞–∫ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —á–µ—Ä–µ–∑ –∑–∞–≥–æ–ª–æ–≤–æ–∫
                {
                    headers: {
                        "Authorization": `tma ${initDataRaw}`, // –ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö initDataRaw —á–µ—Ä–µ–∑ –∑–∞–≥–æ–ª–æ–≤–æ–∫
                    },
                }
            );

            if (response.data.ok) {
                console.log("‚úÖ Authentication successful:", response.data);
                setAuthStatus("‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!");
            } else {
                console.error("‚ùå Authentication failed:", response.data.message);
                setAuthStatus(`‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: ${response.data.message}`);
            }
        } catch (error) {
            if (error.response) {
                console.error("üö® Server responded with error:", error.response.data);
                setAuthStatus(`üö® –û—à–∏–±–∫–∞: ${error.response.data.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"}`);
            } else if (error.request) {
                console.error("üì° No response from server:", error.request);
                setAuthStatus("üì° –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.");
            } else {
                console.error("‚öôÔ∏è Error setting up request:", error.message);
                setAuthStatus(`‚öôÔ∏è –û—à–∏–±–∫–∞: ${error.message}`);
            }
        }
    };

    useEffect(() => {
        const { initDataRaw } = retrieveLaunchParams(); // –ò–∑–≤–ª–µ–∫–∞–µ–º initDataRaw
        if (initDataRaw) {
            console.log("Telegram Init Data Raw:", initDataRaw);

            // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            authenticateWithServer(initDataRaw);
        } else {
            console.warn("Telegram WebApp –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –¥–∞–Ω–Ω—ã–µ.");
            setAuthStatus("Telegram WebApp –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –¥–∞–Ω–Ω—ã–µ.");
        }
    }, []);

    return (
        <div className="app">
            <Header />
            <Stats />
            <Main />
            <Footer />

            {/* –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ */}
            {authStatus && (
                <div
                    style={{
                        marginTop: "20px",
                        padding: "10px",
                        border: "1px solid",
                        color: authStatus.includes("–£—Å–ø–µ—à–Ω—ã–π") ? "green" : "red",
                    }}
                >
                    {authStatus}
                </div>
            )}
        </div>
    );
};

export default App;
